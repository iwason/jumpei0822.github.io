---
layout: post
title:  "プログラミング　スキルの定義を考える"
date:   2017-04-08 22:00:07 +0900
categories: Programming skill
---
エンジニアとして世の中の課題を解決していくには  
技術力を常に磨いていく必要がある。  
普通のプログラマが、会社員として触れる知識は  
そのままだと浅く狭いので、  知識のレベルを広げる必要がある。

NLP(Neuro-Linguistic Programming)によると
学習の段階として

1. 無意識的無能
1. 意識的無能
1. 意識的有能
1. 無意識的有能
1. 意識的有能に意識的有能

という段階がある。  

それぞれ簡略化してスキルとして考えると、

| レベル | 学習の状態 | スキルの状態 |
|:-----------:|:------------:|:------------:|
| 1 | 知らない、できない | 聞いたこともない |
| 2 | 知ってるけど、できない | 理論はしってる |
| 3 | 頑張ればできる | やったことがある |
| 4 | 特に考えずにできる | 身についている状態 |
| 5 | 教えられる | 噛み砕いて説明できる |

このような形だろうか。

勉強会などで、ただ参加しているだけでは満足感があっても  
レベル2の手前くらいが限度ではなかろうか。
（知らないことが分かった状態）

基本的に、世の中で課題解決をする上で、人の手を借りずにやる場合は、  
最低限幾つかの主要なスキルでレベル4のものを見に付けたほうが
良いのではないだろうか。

フルスタックエンジニアに成るべきとか、１個に成熟しろとかそういう話ではなく、  
自分が何を知らなくて、何を知っているのかをまとめて  
自分の目的に合わせてスキルマップを作っていけるようになりたい。

参考になりそうなサイト、記事

* エンジニアスキルのロードマップ  
[Roadmap to becoming a web developer in 2017][roadmap]
* 技術スタックの種類と選び方  
[choosing the right software stack for your website][stack]

[stack]:https://www.upwork.com/hiring/development/choosing-the-right-software-stack-for-your-website/
[roadmap]: https://github.com/kamranahmedse/developer-roadmap
